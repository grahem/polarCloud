#pragma checksum "C:\Users\devel\StudioProjects\polarCloud Web\polarCloudWeb\Site\Site\Views\Playbook\TechnicalDueDiligence.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e9cb9393d4fbbe85bdb516341fdb57a19f6d75c1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Playbook_TechnicalDueDiligence), @"mvc.1.0.view", @"/Views/Playbook/TechnicalDueDiligence.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Playbook/TechnicalDueDiligence.cshtml", typeof(AspNetCore.Views_Playbook_TechnicalDueDiligence))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\devel\StudioProjects\polarCloud Web\polarCloudWeb\Site\Site\Views\_ViewImports.cshtml"
using Site;

#line default
#line hidden
#line 2 "C:\Users\devel\StudioProjects\polarCloud Web\polarCloudWeb\Site\Site\Views\_ViewImports.cshtml"
using Site.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e9cb9393d4fbbe85bdb516341fdb57a19f6d75c1", @"/Views/Playbook/TechnicalDueDiligence.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"70e3a3f90f6d4c226913e942091a3f82dd825d74", @"/Views/_ViewImports.cshtml")]
    public class Views_Playbook_TechnicalDueDiligence : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("background: black; margin-bottom: 20px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\devel\StudioProjects\polarCloud Web\polarCloudWeb\Site\Site\Views\Playbook\TechnicalDueDiligence.cshtml"
  
    ViewBag.Title = "Technical Due Diligence";

#line default
#line hidden
            BeginContext(55, 39, true);
            WriteLiteral("<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    ");
            EndContext();
            BeginContext(94, 1188, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e9cb9393d4fbbe85bdb516341fdb57a19f6d75c14116", async() => {
                BeginContext(100, 1175, true);
                WriteLiteral(@"
        <meta charset=""utf-8"">
        <meta content=""width=device-width, initial-scale=1.0"" name=""viewport"">
        <meta content="""" name=""keywords"">
        <meta content="""" name=""description"">

        <!-- Favicons -->
        <link href=""/img/logo.png"" rel=""icon"">
        <link href=""/img/logo.png"" rel=""apple-touch-icon"">

        <!-- Google Fonts -->
        <link href=""https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,700,700i|Montserrat:300,400,500,700""
            rel=""stylesheet"">

        <!-- Bootstrap CSS File -->
        <link href=""/lib/bootstrap/css/bootstrap.min.css"" rel=""stylesheet"">

        <!-- Libraries CSS Files -->
        <link href=""/lib/font-awesome/css/font-awesome.min.css"" rel=""stylesheet"">
        <link href=""/lib/animate/animate.min.css"" rel=""stylesheet"">
        <link href=""/lib/ionicons/css/ionicons.min.css"" rel=""stylesheet"">
        <link href=""/lib/owlcarousel/assets/owl.carousel.min.css"" rel=""stylesheet"">
        <link href=""/lib/l");
                WriteLiteral("ightbox/css/lightbox.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Main Stylesheet File -->\r\n        <link href=\"/css/style.css\" rel=\"stylesheet\">\r\n\r\n    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1282, 8, true);
            WriteLiteral("\r\n\r\n    ");
            EndContext();
            BeginContext(1290, 20399, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e9cb9393d4fbbe85bdb516341fdb57a19f6d75c16583", async() => {
                BeginContext(1343, 20339, true);
                WriteLiteral(@"
        <div style=""margin-top: 120px"">
            <div class=""d-flex"" style=""background-color: #BBCDE1; border-radius: 40px; height: 40px"">
                <p  class=""pull-left"" style=""margin-left: 15px; margin-top: -4px"">
                    <font style=""color: black; font-size: 30px"">
                        <strong>
                            <a id=""overview"" href=""#"" onmousedown=""overviewClicked()"" onmouseenter=""style='color: #188263'"" onmouseleave=""style='color: #80080'"">
                                Due Diligence
                            </a>
                        </strong>  
                    </font>
                    </p>
            </div>
            <div id=""overviewContainer"" style=""background-color: #BBCDE1; 
            border-radius: 0 0 40px 40px; 
            height: 180px;
            margin-top: 10px;
            display: none""
            >
                <p class=""pull-left"" style=""margin-left: 20px; margin-top: 10px; margin-right: 10px; padding: 40px, ");
                WriteLiteral(@"5px, 10px, 20px"">
                    <font style=""color: black;"">
                            Management, regulators and investors will want to see a transparent details of your company without disclosing the secret sauce. This template helps to serve as a guide through the process of obtaining and hosting information could be required in conducting due diligence.
                    </font>
                </p>
            </div>
        </div>
    
        <div style=""margin-top: 50px"">
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Preparation</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""establishProtocol""/> Establish a protocol for staff to gain access to information.</ul> 
            <ul><input type=""checkbox"" class=""checkbox"" id=""hostDataRoom""/> Host a secure data room in the customer's local or cloud file system.</label></div></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""toc""/> Commit a Table of Contents to");
                WriteLiteral(@" the data room.</ul>
            <br>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Contact</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct an initial discovery meeting.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Commit minutes to the data room.</ul>
            <br>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Overview</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Create or update the Org Chart.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Describe IT infrastructure.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Describe the application layer.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Produce information flow narrative.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate major project initiatives.</ul>
            <ul><input type=""che");
                WriteLiteral(@"ckbox"" class=""checkbox"" id=""""/> Produce IT Project Management Platform & Processing deck.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Categorize and implement Punch List items.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Commit artifacts to the data room.</ul>
            <br>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Interviews</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct employee interviews.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Review findings and repeat info gathering.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Status Update.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Commit reviews and status update to the data room.</ul>
            <br>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Organization and Operations</font></strong></ul>
            <ul><input ty");
                WriteLiteral(@"pe=""checkbox"" class=""checkbox"" id=""""/> Review policies and procedures.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Present Platform Org & Development PPT.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Gather feedback and commit to the data room.</ul>
            <br>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Software Development Lifecycle</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Review items in technology project tracking software.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Review items in the engineering ticketing system.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Document Change Management process.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate the Quality Assurance process.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Document production deployment process.</ul>
       ");
                WriteLiteral(@"     <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Obtain release notes from prior months.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Commit artifacts to the data room.</ul>
            <br>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Security</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Review the most recent security audit.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate leased privilege and user access rights. </ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Perform analysis of partner access to resources.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Analyze the platform for a penetration test.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct analysis of customer logins and 2-Factor Authentication.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct PII analysis.</ul>
  ");
                WriteLiteral(@"          <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate opportunities to conduct an external security review.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Review certificates of authority and expiration.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct code review on each code repository.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Review the monitoring of software patch updates.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Review the policy for handling sensitive data.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Write an opinion on Security Posture.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Commit artifacts to the data repository.</ul>
            <br>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Quality</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Functional tests, ");
                WriteLiteral(@"integration tests, canaries, meters, monitors, and alarms.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Review of user acceptance testing.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate existing coding standards.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct a review of data repositories.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct a review of backup and expiration policies of data repositories.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct analysis of multi-tenancy models.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct a review of data migration practices.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct a review of data retention practices.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct a review of employed rule engines.</ul>
            <ul><input type=""checkbox"" ");
                WriteLiteral(@"class=""checkbox"" id=""""/> Conduct a review of rule artifacts.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate platform scalability capabilities.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate recovery point and recovery time objectives.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Obtain a history of outages and downtime.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct Failure Mode Analysis.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate controls on the product, pricing, and fees.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Produce an Explanation of Application Components.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Update opinion on Security Posture.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Commit artifacts to the data room.</ul>
            <br>
            <ul><li><strong><font ");
                WriteLiteral(@"color=""#800080"" style=""font-size: 24px"">Diagraming</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Produce Footprint Diagram.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Produce Physical Diagram.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Produce Platform Architecture.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Produce Network Diagram.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Product Deployment Diagram.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Commit artifacts to the data room.</ul>
            <br>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Vendors</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Obtain vendor contracts.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Produce vendor list including name, the reason for the contract, expiration da");
                WriteLiteral(@"te and pricing model used.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate open source licensing.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate paid-for software licenses.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Commit to the data room.</ul>
            <br>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Customer Engagement</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Explain customer list or lead aggregation strategy.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate analytics platform.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> List customer contact points.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Customer support phone or chat support.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Document direct mail, email, SMS and push notification str");
                WriteLiteral(@"ategy.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Email strategy.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> SMS strategy.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Push Notification strategy.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Document customer retention process.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Document customer support process.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Describe the customer discount process.</ul>
            <br>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Business Continuity</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate the business continuity plan.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate strategy for a loss of key staff members.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" i");
                WriteLiteral(@"d=""""/> Produce IT Budget and Spend Matrix, including infrastructure, licensing, and OpEx.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Produced explanation of software deprecation, upgrades, and replacement road map.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Collect regulatory audits and control documentation and commit to the data room.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Produce a list of technical certifications, awards, and premier partnerships.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Explanation of critical vendor services.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Explanation of partner on-boarding process.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Explanation of public-facing APIs.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Explanation of the content delivery network.</ul>
            <ul><input type=""che");
                WriteLiteral(@"ckbox"" class=""checkbox"" id=""""/> Explanation of data repositories.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Explanation of staff computer hardware/software, engineering hardware, and software used in normal business operations.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate help desk procedures.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Review of operational failure plans.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Review of runbooks.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Review of RPO/RTO and strategy.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Produce a narrative on automation.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Commit artifacts to the data room.</ul>
            <br>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Operations</font></strong></ul>
            <ul><input type");
                WriteLiteral(@"=""checkbox"" class=""checkbox"" id=""""/> Document meters, monitors, alarms and escalation processes.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Document on-call rotation.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Document weekly and monthly ops reviews.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Evaluate operational readiness.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Commit artifacts to the data room.</ul>
            <br>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Compliance</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Cloud Security Alliance Controls (CSA) compliance review.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> ISO 9001:2015 quality management compliance review.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> ISO/IEC 27001:2013 security compliance review.</ul>
            <b");
                WriteLiteral(@"r>
            <ul><li><strong><font color=""#800080"" style=""font-size: 24px"">Postmortem</font></strong></ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Conduct GAP analysis.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Patent findings.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Opportunities for cost reduction.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Opportunities for revenue growth.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Present opinion on options for technology offering.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Record feedback.</ul>
            <ul><input type=""checkbox"" class=""checkbox"" id=""""/> Commit articles to the data room.</ul>
        </div>

        <a href=""#"" class=""back-to-top""><i class=""fa fa-chevron-up""></i></a>
        
        <script src=""/lib/jquery/jquery.min.js""></script>
        <script src=""/lib/jquery/jquery-migrate.");
                WriteLiteral(@"min.js""></script>
        <script src=""/lib/bootstrap/js/bootstrap.bundle.min.js""></script>
        <script src=""/lib/easing/easing.min.js""></script>
        <script src=""/lib/superfish/hoverIntent.js""></script>
        <script src=""/lib/superfish/superfish.min.js""></script>
        <script src=""/lib/wow/wow.min.js""></script>
        <script src=""/lib/waypoints/waypoints.min.js""></script>
        <script src=""/lib/counterup/counterup.min.js""></script>
        <script src=""/lib/owlcarousel/owl.carousel.min.js""></script>
        <script src=""/lib/isotope/isotope.pkgd.min.js""></script>
        <script src=""/lib/lightbox/js/lightbox.min.js""></script>
        <script src=""/lib/touchSwipe/jquery.touchSwipe.min.js""></script>
        
        <script src=""/js/main.js""></script>
        <script src=""/js/site.js""></script>

        <script>
                 var overvieContentHeight = ""70px""; //initiate as false
                window.mobilecheck = function() {
                    var check = false;
");
                WriteLiteral(@"                    (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klo");
                WriteLiteral(@"n|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||wi");
                WriteLiteral(@"ndow.opera);
                    return check;
                };
                if (window.mobilecheck() === true) {
                    overvieContentHeight = ""180px"";
                } else {
                    overvieContentHeight = ""70px"";
                }

                var toggle = false;

                function overviewClicked() {
                    toggle = !toggle;
                    var target = document.getElementById('overviewContainer');
                    if( toggle) {
                        target.style.height = overvieContentHeight;
                        target.style.display = ""block"";
                    }
                    else {
                        target.style.height = 0;
                        target.style.display = ""none"";
                     }
                }                
            </script>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(21689, 1, true);
            WriteLiteral(" ");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
