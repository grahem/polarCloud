#pragma checksum "C:\Users\devel\StudioProjects\polarCloud Web\polarCloudWeb\Site\Site\Views\Playbook\ProductDescription.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cb1f859cc60ee07ee115c73b29a1c97a317444d7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Playbook_ProductDescription), @"mvc.1.0.view", @"/Views/Playbook/ProductDescription.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Playbook/ProductDescription.cshtml", typeof(AspNetCore.Views_Playbook_ProductDescription))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\devel\StudioProjects\polarCloud Web\polarCloudWeb\Site\Site\Views\_ViewImports.cshtml"
using Site;

#line default
#line hidden
#line 2 "C:\Users\devel\StudioProjects\polarCloud Web\polarCloudWeb\Site\Site\Views\_ViewImports.cshtml"
using Site.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cb1f859cc60ee07ee115c73b29a1c97a317444d7", @"/Views/Playbook/ProductDescription.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"70e3a3f90f6d4c226913e942091a3f82dd825d74", @"/Views/_ViewImports.cshtml")]
    public class Views_Playbook_ProductDescription : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("background: black; margin-bottom: 20px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\devel\StudioProjects\polarCloud Web\polarCloudWeb\Site\Site\Views\Playbook\ProductDescription.cshtml"
  
    ViewBag.Title = "Product Description";

#line default
#line hidden
            BeginContext(51, 39, true);
            WriteLiteral("<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    ");
            EndContext();
            BeginContext(90, 1188, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cb1f859cc60ee07ee115c73b29a1c97a317444d74088", async() => {
                BeginContext(96, 1175, true);
                WriteLiteral(@"
        <meta charset=""utf-8"">
        <meta content=""width=device-width, initial-scale=1.0"" name=""viewport"">
        <meta content="""" name=""keywords"">
        <meta content="""" name=""description"">

        <!-- Favicons -->
        <link href=""/img/logo.png"" rel=""icon"">
        <link href=""/img/logo.png"" rel=""apple-touch-icon"">

        <!-- Google Fonts -->
        <link href=""https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,700,700i|Montserrat:300,400,500,700""
            rel=""stylesheet"">

        <!-- Bootstrap CSS File -->
        <link href=""/lib/bootstrap/css/bootstrap.min.css"" rel=""stylesheet"">

        <!-- Libraries CSS Files -->
        <link href=""/lib/font-awesome/css/font-awesome.min.css"" rel=""stylesheet"">
        <link href=""/lib/animate/animate.min.css"" rel=""stylesheet"">
        <link href=""/lib/ionicons/css/ionicons.min.css"" rel=""stylesheet"">
        <link href=""/lib/owlcarousel/assets/owl.carousel.min.css"" rel=""stylesheet"">
        <link href=""/lib/l");
                WriteLiteral("ightbox/css/lightbox.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Main Stylesheet File -->\r\n        <link href=\"/css/style.css\" rel=\"stylesheet\">\r\n\r\n    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1278, 8, true);
            WriteLiteral("\r\n\r\n    ");
            EndContext();
            BeginContext(1286, 11419, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cb1f859cc60ee07ee115c73b29a1c97a317444d76554", async() => {
                BeginContext(1339, 11359, true);
                WriteLiteral(@"
        <div style=""margin-top: 120px"">

            <div class=""d-flex"" style=""background-color: #BBCDE1; border-radius: 40px; height: 40px"">
                <p  class=""pull-left"" style=""margin-left: 15px; margin-top: -4px"">
                    <font style=""color: black; font-size: 30px"">
                        <strong>
                            <a id=""overview"" href=""#"" onmousedown=""overviewClicked()"" onmouseenter=""style='color: #188263'"" onmouseleave=""style='color: #80080'"">
                                Description
                            </a>
                        </strong>  
                    </font>
                    </p>
            </div>
            <div id=""overviewContainer"" style=""background-color: #BBCDE1; 
            border-radius: 0 0 40px 40px; 
            height: 180px;
            margin-top: 10px;
            display: none""
            >
                <p class=""pull-left"" style=""margin-left: 20px; margin-top: 10px; margin-left: 20px; padding: 40px, 5");
                WriteLiteral(@"px, 10px, 20px"">
                    <font style=""color: black;"">
                            Writing a product description is important for communicating to steakholder and staff the vision of the initiative at time of launch.
                    </font>
                </p>
            </div>
        </div>
    
        <div style=""margin-top: 50px"">
            <p>Write a succinct one-paragraph overview of how the product can be used by the customer. It should describe the product and what can be done with the product. Refrain from including economics, technical details, release timelines, and product roadmaps.

        <p><strong><font color=""#800080"">FAQ</font></strong></p>
        <p>A good overview should prompt a number of questions. Allowing the audience to review the top questions expected to be asked deters from lengthy discussions on each question. Well written answers will include answers to potential follow-up questions. Putting a FAQ directly after the overview is a fast way to brin");
                WriteLiteral(@"g the audience up to speed before diving into the product details.

        <ul><li><strong><font color=""#800080"">What is the product?</strong></font>
        <p>Expand on the overview. Explain the various ways the product can be used by the customer. Answer the question as if the customer was asking it. Include a simple pricing model.
        </li></ul>

        <ul><li><strong><font color=""#800080"">Who should use the product?</strong></font>
            <p>Describe customer demographics. Expand on why a customer would want to use the product. Use a customer persona to walk the reader through the user experience. Explain how using the product benefits the customer.
        </li></ul>

        <ul><li><strong><font color=""#800080"">How do you get started with the product?</strong></font>
            <p>Walkthrough the steps a customer takes when getting started using the product. Describe how long the product experience last. Explain how the customer interacts with the product and what, if any, secu");
                WriteLiteral(@"rity measures are put in place. Detail what the customer seeing in these first steps. Including in a limited amount, screenshots can be an effective way of communicating a customer experience.
        </li></ul>

        <ul><li><strong><font color=""#800080"">How is the product supported?</strong></font>
            <p>Explain how the customer is guided using the product. What can a customer do if they have an issue using the product?
        </li></ul>

        <ul><li><strong><font color=""#800080"">Why will the product be successful?</strong></font>
            <p>Describe what a successful product looks like. List the top 3 competitors in the marketplace and the differentiators of the product. Detail market advantages for the product. Describe the expected size of the market. Explain how revenue will exceed the costs of development and operations. Predict the lifetime value of a typical customer. Describe how customers will be retained.
        </li></ul>

        <ul><li><strong><font color=""#800");
                WriteLiteral(@"080"">How will success be measured</strong></font>
            <p>Determine the KPIs that will drive insights into customer adoption and retention. Explain the economic indicators of success. Detail the expected timeline for evaluating success. 
        </li></ul>

        <ul><li><strong><font color=""#800080"">When will the product evolve?</strong></font>
            <p>Illustrate the future of the product scope and features. Are dates slated for future iterations? Will there be changes in pricing structure as the product grows? Explain how expansion affects customer demographics.
        </li></ul>

        <p><strong><font color=""#800080"">Walkthrough</font></strong></p>
        <p>A walkthrough is a collection of primary use cases for customer success. A use case reveals the requirements of the product from the customer's point of view. Use this section to detail the various interactions the customer has with the product as an addendum to each use case. Repeat the steps related to getting started fr");
                WriteLiteral(@"om the FAQ. A use case should be no more than 2 sentences, begin with the customer's function, explain what the customer is trying to accomplish and why the customer wants to accomplish the task.
        ex. As a marketer, I want to breakdown the demographics of an active client list so that I can send them promotional marketing material.
        The website enables the user to craft a simple query that can be executed against the user's pre-loaded data set.
        When the query executes, an output of the target customer list containing address data can be downloaded for use in a downstream marketing platform.

        <p><strong><font color=""#800080"">Function Requirements</font></strong></p>
        <p>Functional requirements are largely revealed in the walkthrough. Here, prioritize a list of minimum requirements of the system. The list should be grouped by the functional areas of the product. Functional areas of the product include product interactions, APIs, integrations, control plane, data plane,");
                WriteLiteral(@" physical forms, customizations, analytics, product support, and billing, and internal product use control features analytics.

        <p><strong><font color=""#800080"">Customer Feedback</font></strong></p>
        <p>Explain how customer feedback was acquired. List top customers and the feedback collected from any interviews and demos. Expand on each customer's pain points.

        <p><strong><font color=""#800080"">Marketing</font></strong></p>
        <p>Write a product release document. Describe whom the product will help and why it will help them. Illustrate each of the problems the customer is trying to solve. Explain the pain points the customer wants to alleviate. How does the product ensure the problem is being solved? Describe the product's output to the customer. Explain how the customer can gain access to the product and include timing and geographic availability. Explain the cost to the customer. Explain the marketing channels that will be used to acquire customers. Again calculate the cost ");
                WriteLiteral(@"to acquire a customer. How and when will the marketing campaigns roll-out? Are there opportunities for off-season vs on-season marketing campaigns?

        </div>

        <a href=""#"" class=""back-to-top""><i class=""fa fa-chevron-up""></i></a>
        
        <script src=""/lib/jquery/jquery.min.js""></script>
        <script src=""/lib/jquery/jquery-migrate.min.js""></script>
        <script src=""/lib/bootstrap/js/bootstrap.bundle.min.js""></script>
        <script src=""/lib/easing/easing.min.js""></script>
        <script src=""/lib/superfish/hoverIntent.js""></script>
        <script src=""/lib/superfish/superfish.min.js""></script>
        <script src=""/lib/wow/wow.min.js""></script>
        <script src=""/lib/waypoints/waypoints.min.js""></script>
        <script src=""/lib/counterup/counterup.min.js""></script>
        <script src=""/lib/owlcarousel/owl.carousel.min.js""></script>
        <script src=""/lib/isotope/isotope.pkgd.min.js""></script>
        <script src=""/lib/lightbox/js/lightbox.min.js""></scr");
                WriteLiteral(@"ipt>
        <script src=""/lib/editor.js/code.ts""></script>
                
        <script src=""/js/main.js""></script>
        <script src=""/js/site.js""></script>

        <script>
            var overvieContentHeight = ""80px""; //initiate as false
            window.mobilecheck = function() {
                var check = false;
                (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds");
                WriteLiteral(@"(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|");
                WriteLiteral(@"ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
                return check;
            };
            if (window.mobilecheck() === true) {
                overvieContentHeight = ""100px"";
            } else {
                overvieContentHeight = ""60px"";
            }

            var toggle = false;

            function overviewClicked() {
                toggle = !toggle;
                var target = document.getElementById('overviewContainer');
                if( toggle) {
                    target.style.height = overvieContentHeight;
                    target.style.display = ""block"";
                }
                else {
                    target.style.height = 0;
              ");
                WriteLiteral("      target.style.display = \"none\";\r\n                    }\r\n            }\r\n        </script>\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(12705, 1, true);
            WriteLiteral(" ");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
