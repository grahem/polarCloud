#pragma checksum "C:\Users\devel\StudioProjects\polarCloud Web\polarCloudWeb\Site\Site\Views\Playbook\NewBusinessCheckList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c956ff638038ca3f59cff132795f36f76aef9bad"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Playbook_NewBusinessCheckList), @"mvc.1.0.view", @"/Views/Playbook/NewBusinessCheckList.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Playbook/NewBusinessCheckList.cshtml", typeof(AspNetCore.Views_Playbook_NewBusinessCheckList))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\devel\StudioProjects\polarCloud Web\polarCloudWeb\Site\Site\Views\_ViewImports.cshtml"
using Site;

#line default
#line hidden
#line 2 "C:\Users\devel\StudioProjects\polarCloud Web\polarCloudWeb\Site\Site\Views\_ViewImports.cshtml"
using Site.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c956ff638038ca3f59cff132795f36f76aef9bad", @"/Views/Playbook/NewBusinessCheckList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"70e3a3f90f6d4c226913e942091a3f82dd825d74", @"/Views/_ViewImports.cshtml")]
    public class Views_Playbook_NewBusinessCheckList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("background: black; margin-bottom: 20px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\devel\StudioProjects\polarCloud Web\polarCloudWeb\Site\Site\Views\Playbook\NewBusinessCheckList.cshtml"
  
    ViewBag.Title = "New Business Checklist";

#line default
#line hidden
            BeginContext(54, 39, true);
            WriteLiteral("<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    ");
            EndContext();
            BeginContext(93, 1188, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c956ff638038ca3f59cff132795f36f76aef9bad4107", async() => {
                BeginContext(99, 1175, true);
                WriteLiteral(@"
        <meta charset=""utf-8"">
        <meta content=""width=device-width, initial-scale=1.0"" name=""viewport"">
        <meta content="""" name=""keywords"">
        <meta content="""" name=""description"">

        <!-- Favicons -->
        <link href=""/img/logo.png"" rel=""icon"">
        <link href=""/img/logo.png"" rel=""apple-touch-icon"">

        <!-- Google Fonts -->
        <link href=""https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,700,700i|Montserrat:300,400,500,700""
            rel=""stylesheet"">

        <!-- Bootstrap CSS File -->
        <link href=""/lib/bootstrap/css/bootstrap.min.css"" rel=""stylesheet"">

        <!-- Libraries CSS Files -->
        <link href=""/lib/font-awesome/css/font-awesome.min.css"" rel=""stylesheet"">
        <link href=""/lib/animate/animate.min.css"" rel=""stylesheet"">
        <link href=""/lib/ionicons/css/ionicons.min.css"" rel=""stylesheet"">
        <link href=""/lib/owlcarousel/assets/owl.carousel.min.css"" rel=""stylesheet"">
        <link href=""/lib/l");
                WriteLiteral("ightbox/css/lightbox.min.css\" rel=\"stylesheet\">\r\n\r\n        <!-- Main Stylesheet File -->\r\n        <link href=\"/css/style.css\" rel=\"stylesheet\">\r\n\r\n    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1281, 8, true);
            WriteLiteral("\r\n\r\n    ");
            EndContext();
            BeginContext(1289, 13731, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c956ff638038ca3f59cff132795f36f76aef9bad6573", async() => {
                BeginContext(1342, 13671, true);
                WriteLiteral(@"
        <div style=""margin-top: 120px"">
            <strong><font color=""#800080"">Foundational</font></strong>
            <ul>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Industry research<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Product or service description<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Draft Members and Equity Document<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> List of starting assets<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Funding model<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Feedback - friends, and families<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Lead acquisition strategy<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Executive Summary<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Timeline<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/>");
                WriteLiteral(@" Business Plan Deck<br><br>
            </ul>
            <strong><font color=""#800080"">Internet Assets Infrastructure</font></strong>
            <ul>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Domain name<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Email server and accounts<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Phone numbers<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Linked-In<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Crunchbase<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Google / Apple Maps<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Facebook<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Twitter<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Instagram<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Youtube<br>
            </ul>
            <strong><font color");
                WriteLiteral(@"=""#800080"">Software</font></strong>
            <ul>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Cloud-based project tracking software<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Communications platform<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Shared document repository<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Email client<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Office Software<br><br>
            </ul>
            <strong><font color=""#800080"">Register</font></strong>
            <ul>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Determine Registered Agent<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> File for an LLC / S-Scorp<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> LLC or S-Corp Structure<br>
             </ul>
            <strong><font color=""#800080"">File Articles of Organization</font></strong>
    ");
                WriteLiteral(@"        <ul>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Management Structure<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Location of Operations<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Registered Agent<br>
            </ul>
            <strong><font color=""#800080"">File Operating Agreement</font></strong>
            <ul>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Terms and Conditions<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Pay Structure<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Management System<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Voting Rights<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Removal or Additions of Members<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Amending the Agreement<br>
            </ul>
            <strong><font color=""#800080"">File Statement of Inform");
                WriteLiteral(@"ation (LLC-12)</font></strong>
            <ul>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Filing Number<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> LLC Name<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Address<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Name and address of the officers<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Description of your work<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Registered Agent Name and address<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Managers or members<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> CEO<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Email Address<br>
            </ul>
            <strong><font color=""#800080"">Additional</font></strong>
            <ul>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Register DBA with the");
                WriteLiteral(@" state government<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Obtain EIN<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> File federal form 941 within 12 months (Employee's Quarterly Federal Tax Form)<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> File federal form 940 within 15 months (Employers Annual Federal Unemployment Tax Return)<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Pay fees for local and state Franchise Tax<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> If selling goods, register Sales Tax<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Bank account<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Business licenses<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Seller permits<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Trademarks<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/>");
                WriteLiteral(@" Patents<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Logo<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Business Cards<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Letterhead<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Non-Disclosure Agreement<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Invoice template<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Purchase Order template<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Inventory requirements<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Website<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Vendor list<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Merchant payment processing account<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Accounting system<br>
                <input type=""checkbox"" class=""checkbox"" i");
                WriteLiteral(@"d=""""/> Accounting accounts<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Tax accounts<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> General Ledger<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Business Insurance<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Compliance Calendar<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> People Network Graph (external contacts and relationships)<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> SWOT analysis<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Org chart<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Business mentors<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Affiliates<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Client sheet<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Employee directory<br>
                <input ");
                WriteLiteral(@"type=""checkbox"" class=""checkbox"" id=""""/> Employee Resumes, Offer Letters, Signing Letter, NDA, onboarding package<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Employee payment process<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Employee benefits<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Determine how to conduct payroll<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Determine how to offer employee benefits<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Job offer template<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> On-boarding package<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Marketing plan<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Price sheet<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Advertisements<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Drafted sales pitch<br");
                WriteLiteral(@">
                <input type=""checkbox"" class=""checkbox"" id=""""/> Customer personas<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Call Center strategy<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Articles of risk and compliance<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Terms and Conditions<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Security Posture<br>
            </ul>

            <strong><font color=""#800080"">Documents requiring Letterheads</font></strong>
            <ul>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Executive Summary<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Business Plan<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Product Descriptions<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Standard Operating Procedures<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Sales Agreemen");
                WriteLiteral(@"t<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Service Agreement<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Letter of Intent<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Non-Disclosure Agreement<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Disclosures<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Terms of Use<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Privacy Policy<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Release of Liability<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Bill of Materials<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Purchase Order<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Purchase Agreement<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Invoice<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Bill of Sale<");
                WriteLiteral(@"br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Scope of Work<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Job Application / Job Description<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Employment Offer Letter<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Employment Contract<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Employee Paystub<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Employee Handbook<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Non-Compete Agreement<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Minutes<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Balance Sheet<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Income Statement / Profit and Loss Statement<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Email Signature<br>
                <input type=");
                WriteLiteral(@"""checkbox"" class=""checkbox"" id=""""/> Fax Cover Sheet<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Letter of Recommendation<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Organizational Chart<br>
                <input type=""checkbox"" class=""checkbox"" id=""""/> Term Sheet<br>
            </ul>
            <a href=""#"" class=""back-to-top""><i class=""fa fa-chevron-up""></i></a>
        
        <script src=""/lib/jquery/jquery.min.js""></script>
        <script src=""/lib/jquery/jquery-migrate.min.js""></script>
        <script src=""/lib/bootstrap/js/bootstrap.bundle.min.js""></script>
        <script src=""/lib/easing/easing.min.js""></script>
        <script src=""/lib/superfish/hoverIntent.js""></script>
        <script src=""/lib/superfish/superfish.min.js""></script>
        <script src=""/lib/wow/wow.min.js""></script>
        <script src=""/lib/waypoints/waypoints.min.js""></script>
        <script src=""/lib/counterup/counterup.min.js""></script>
        <script src=""");
                WriteLiteral(@"/lib/owlcarousel/owl.carousel.min.js""></script>
        <script src=""/lib/isotope/isotope.pkgd.min.js""></script>
        <script src=""/lib/lightbox/js/lightbox.min.js""></script>
        <script src=""/lib/touchSwipe/jquery.touchSwipe.min.js""></script>
        
        <script src=""/js/main.js""></script>
        <script src=""/js/site.js""></script>
    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(15020, 10, true);
            WriteLiteral(" \r\n</html>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
